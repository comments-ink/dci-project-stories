version: '2.1'

networks:
  default:
    name: dci-project-stories
    driver: bridge

volumes:
  static_files:
  postgres_data:

services:
  nginx:
    image: nginx:latest
    hostname: nginx
    container_name: nginx
    ports:
      - 9090:9090
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_files:/static
    depends_on:
      django:
        condition: service_healthy

  django:
    image: dci-project-stories:${DEMO_STORIES_VER:-latest}
    hostname: django
    container_name: django
    build:
      context: .
      dockerfile: Dockerfile
      target: build-image
    environment:
      - PRODUCTION=${PRODUCTION}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PWD=${DB_PWD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - static_files:/dci-project-stories/static
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 9000:9000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9000 ||Â exit 1
      start_period: 10s
      timeout: 45s
      interval: 5s
      retries: 10

  postgres:
    image: postgres:latest
    hostname: postgres
    container_name: postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PWD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}" ]
      timeout: 45s
      interval: 5s
      retries: 10
